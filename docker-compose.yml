version: "3.8"
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - microservices

  fastapi-todo-service:
    container_name: todo-api
    build:
      context: ./fastapi-todo-service
      dockerfile: Dockerfile
    depends_on:
      - mongodb
    environment:
      ATLAS_URI: mongodb://root:password@mongodb:27017
      DB_NAME: todoapi
    networks:
      - microservices

  next-todo-app:
    container_name: todo-client
    build:
      context: ./next-todo-app
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    networks:
      - client-host

  api-gateway:
    container_name: nginx
    build:
      context: ./todo-api-gateway
      dockerfile: Dockerfile
    depends_on:
      - fastapi-todo-service
    ports:
      - 80:80
    networks:
      - microservices

  oauth2-proxy:
    container_name: oauth2-proxy
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    environment:
      - OAUTH2_PROXY_CLIENT_ID=554984553432-q75sl7qnmbu9fdsv8o7otib66lt9cccf.apps.googleusercontent.com
      - OAUTH2_PROXY_CLIENT_SECRET=${OAUTH2_PROXY_CLIENT_SECRET}
      - OAUTH2_PROXY_COOKIE_SECRET=${OAUTH2_PROXY_COOKIE_SECRET}
      - OAUTH2_PROXY_EMAIL_DOMAINS=*
      - OAUTH2_PROXY_REVERSE_PROXY=true
      - OAUTH2_PROXY_REDIRECT_URL=http://localhost/oauth2/callback
      - OAUTH2_PROXY_COOKIE_SECURE=false
      - OAUTH2_PROXY_UPSTREAM=http://todo-api:8000
      - OAUTH2_PROXY_HTTP_ADDRESS=http://0.0.0.0:4180
      - OAUTH2_PROXY_SET_AUTHORIZATION_HEADER=true
      - OAUTH2_PROXY_SET_XAUTHREQUEST=true
      - OAUTH2_PROXY_WHITELIST_DOMAINS=.localhost:3000
    command:
      - --http-address=0.0.0.0:4180
      - --upstream=http://todo-api:8000
      - --skip-provider-button=true
    networks:
      - microservices

networks:
  microservices:
    driver: bridge   # Represents a place to host all your microservices, such as Azure AKS, Azure Container Apps, Google Cloud Run, GKE, or EKS.
  client-host:
    driver: bridge # represents a different place to host your frontend, like Vercel, Hostinger, or AWS Amplify.

volumes:
  mongodb_data:
    driver: local
